module alu8_testcases (
        input count[3],
        output alufn[6],
        output testcases[4][3][8],
        output state[2]
    ) {

    sig cases[4][3][8];

    // test cases are not yet generated
    always {
<<<<<<< HEAD
  
        alufn = b000000;
        cases = {
=======
        case(count) {
            4d0:
                alufn = b000000;
                cases = {
                    {8d0, 8d0, 8d0},
                    {8d1, 8d1, 8d2},
                    {8d0, 8d0, 8d0},
                    {8d0, 8d0, 8d0}
                };

            4d1:
                alufn = b000000;
                cases = {
                    {8d0, 8d0, 8d0},
                    {8d0, 8d0, 8d0},
                    {8d0, 8d0, 8d0},
                    {8d0, 8d0, 8d0}
                };

            4d2:
                alufn = b000000;
                cases = {
                    {8d0, 8d0, 8d0},
                    {8d0, 8d0, 8d0},
                    {8d0, 8d0, 8d0},
                    {8d0, 8d0, 8d0}
                };

            4d3:
                alufn = b000000;
                cases = {
>>>>>>> 091854add28c1c39d5c4e51c3d8f6bea9111c642
                    {8d0, 8d0, 8d0},
                    {8d0, 8d0, 8d0},
                    {8d0, 8d0, 8d0},
                    {8d0, 8d0, 8d0}
              };
        state[1:0] = b0;
    
        case(count) {
            4d0:
                
                alufn = b000000;
                cases = {
                    {8d0, 8d0, 8d0},
                    {8d0, 8d0, 8d0},
                    {8d0, 8d0, 8d0},
                    {8d0, 8d0, 8d0}
                };
                state[1]=b1;
            4d1:
                alufn = b000001;
                cases = {
                    {8d1, 8d0, 8d1},
                    {8d7, 8d2, 8d5},
                    {8d4, 8d2, 8d2},
                    {8d6, 8d5, 8d1}
                };
                state[0]=b1;
        }
        testcases = cases;
    } 
}
/*
   This file was generated automatically by the Mojo IDE version B1.3.6.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module alu8_1 (
    input [7:0] a,
    input [7:0] b,
    input [5:0] alufn,
    output reg [7:0] alu,
    output reg z,
    output reg v,
    output reg n
  );
  
  
  
  wire [8-1:0] M_arith_arith;
  wire [1-1:0] M_arith_z;
  wire [1-1:0] M_arith_v;
  wire [1-1:0] M_arith_n;
  alu_arith8_3 arith (
    .alufn(alufn),
    .a(a),
    .b(b),
    .arith(M_arith_arith),
    .z(M_arith_z),
    .v(M_arith_v),
    .n(M_arith_n)
  );
  wire [8-1:0] M_shift_shift;
  alu_shift8_4 shift (
    .alufn(alufn),
    .a(a),
    .b(b),
    .shift(M_shift_shift)
  );
  wire [8-1:0] M_bool_bool;
  alu_bool8_5 bool (
    .alufn(alufn),
    .a(a),
    .b(b),
    .bool(M_bool_bool)
  );
  wire [8-1:0] M_cmp_cmp;
  alu_cmp8_6 cmp (
    .alufn(alufn),
    .z(M_arith_z),
    .v(M_arith_v),
    .n(M_arith_n),
    .cmp(M_cmp_cmp)
  );
  
  always @* begin
    alu = 1'h0;
    
    case (alufn[4+1-:2])
      2'h0: begin
        alu = M_arith_arith;
      end
      2'h1: begin
        alu = M_bool_bool;
      end
      2'h2: begin
        alu = M_shift_shift;
      end
      2'h3: begin
        alu = M_cmp_cmp;
      end
    endcase
    z = M_arith_z;
    v = M_arith_v;
    n = M_arith_n;
  end
endmodule
